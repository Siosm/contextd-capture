/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a contextd_adaptator.h: com.piga.contextd.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CONTEXTD_ADAPTATOR_H_1274105281
#define CONTEXTD_ADAPTATOR_H_1274105281

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.piga.contextd
 */
class ContextdAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.piga.contextd")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.piga.contextd\" >\n"
"    <method name=\"register_application\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"app_name\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"app_pid\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"is_registered\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"domain_changed\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"xml_context\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"required_domain\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"xml_context\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"current_domain\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"register_for_domain_changes_updates\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <signal name=\"globalContextChanged\" >\n"
"      <arg type=\"s\" name=\"previous_context\" />\n"
"      <arg type=\"s\" name=\"new_context\" />\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    ContextdAdaptor(QObject *parent);
    virtual ~ContextdAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString current_domain();
    QString domain_changed(const QString &xml_context);
    QString is_registered();
    QString register_application(const QString &app_name, uint app_pid);
    QString register_for_domain_changes_updates();
    QString required_domain(const QString &xml_context);
Q_SIGNALS: // SIGNALS
    void globalContextChanged(const QString &previous_context, const QString &new_context);
};

#endif
