/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -i contextd_adaptator.h -a :contextd_adaptator.cpp com.piga.contextd.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "contextd_adaptator.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ContextdAdaptor
 */

ContextdAdaptor::ContextdAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ContextdAdaptor::~ContextdAdaptor()
{
    // destructor
}

QString ContextdAdaptor::current_domain()
{
    // handle method call com.piga.contextd.current_domain
    QString out0;
    QMetaObject::invokeMethod(parent(), "current_domain", Q_RETURN_ARG(QString, out0));
    return out0;
}

QString ContextdAdaptor::domain_changed(const QString &xml_context)
{
    // handle method call com.piga.contextd.domain_changed
    QString out0;
    QMetaObject::invokeMethod(parent(), "domain_changed", Q_RETURN_ARG(QString, out0), Q_ARG(QString, xml_context));
    return out0;
}

QString ContextdAdaptor::is_registered()
{
    // handle method call com.piga.contextd.is_registered
    QString out0;
    QMetaObject::invokeMethod(parent(), "is_registered", Q_RETURN_ARG(QString, out0));
    return out0;
}

QString ContextdAdaptor::register_application(const QString &app_name, uint app_pid)
{
    // handle method call com.piga.contextd.register_application
    QString out0;
    QMetaObject::invokeMethod(parent(), "register_application", Q_RETURN_ARG(QString, out0), Q_ARG(QString, app_name), Q_ARG(uint, app_pid));
    return out0;
}

QString ContextdAdaptor::register_for_domain_changes_updates()
{
    // handle method call com.piga.contextd.register_for_domain_changes_updates
    QString out0;
    QMetaObject::invokeMethod(parent(), "register_for_domain_changes_updates", Q_RETURN_ARG(QString, out0));
    return out0;
}

QString ContextdAdaptor::required_domain(const QString &xml_context)
{
    // handle method call com.piga.contextd.required_domain
    QString out0;
    QMetaObject::invokeMethod(parent(), "required_domain", Q_RETURN_ARG(QString, out0), Q_ARG(QString, xml_context));
    return out0;
}

