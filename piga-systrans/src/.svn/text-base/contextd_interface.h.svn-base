/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p contextd_interface.h: com.piga.contextd.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CONTEXTD_INTERFACE_H_1274105293
#define CONTEXTD_INTERFACE_H_1274105293

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.piga.contextd
 */
class ComPigaContextdInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.piga.contextd"; }

public:
    ComPigaContextdInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ComPigaContextdInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> current_domain()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("current_domain"), argumentList);
    }

    inline QDBusPendingReply<QString> domain_changed(const QString &xml_context)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(xml_context);
        return asyncCallWithArgumentList(QLatin1String("domain_changed"), argumentList);
    }

    inline QDBusPendingReply<QString> is_registered()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("is_registered"), argumentList);
    }

    inline QDBusPendingReply<QString> register_application(const QString &app_name, uint app_pid)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(app_name) << qVariantFromValue(app_pid);
        return asyncCallWithArgumentList(QLatin1String("register_application"), argumentList);
    }

    inline QDBusPendingReply<QString> register_for_domain_changes_updates()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("register_for_domain_changes_updates"), argumentList);
    }

    inline QDBusPendingReply<QString> required_domain(const QString &xml_context)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(xml_context);
        return asyncCallWithArgumentList(QLatin1String("required_domain"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void globalContextChanged(const QString &previous_context, const QString &new_context);
};

namespace com {
  namespace piga {
    typedef ::ComPigaContextdInterface contextd;
  }
}
#endif
